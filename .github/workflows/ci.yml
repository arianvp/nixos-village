on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - uses: actions/checkout@v2
      - run: nix flake check

      - uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::686862074153:role/github-actions

      - name: check if AssumeRoleWithWebIdentity is working
        run: nix develop -c aws -- sts get-caller-identity

      - name: terraform init
        run: nix develop -c terraform init

      - name: terraform validate
        run: nix develop -c terraform validate

      - name: terraform fmt
        run: nix develop -c terraform fmt -check

      - name: terraform plan buckets
        run : nix develop -c terraform plan -out=buckets.plan  -target aws_s3_bucket.terraform -target aws_s3_bucket.cache

      - name: terraform apply buckets
        run: nix develop -c terraform apply buckets.plan
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

      - name: nix build 
        run: export TF_VAR_nix_closure=$(nix build .#nixosConfigurations.webserver.config.system.build.toplevel --print-out-paths)

      - name: Copy to cache
        run: |
          echo ${{secrets.SIGNING_KEY}} > cache.key
          nix copy --to 's3://nixos-village-cache20230817114020926200000001?region=eu-central-1&secret-key-file=cache.key' ./result

      - name: terraform plan
        run: |
          nix develop -c terraform plan -out=plan.out

      - name: terraform apply
        run: nix develop -c terraform apply plan.out
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'