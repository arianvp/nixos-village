on:
  push:
    branches:
      - main
  pull_request:
jobs:
  deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: actions/checkout@v2

      - name: terraform init terraform-state
        run: nix develop -c terraform init
        working-directory: deploy/terraform-state

      - name: get_deploy_role_arn
        id: get_deploy_role_arn
        run: |
          deploy_role_arn=$(nix develop -c terraform output -raw deploy_role_arn)
          echo "deploy_role_arn=$deploy_role_arn" >> $GITHUB_OUTPUT
        working-directory: deploy/terraform-state

      - uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-region: eu-central-1
          role-to-assume: ${{ steps.get_deploy_role_arn.outputs.deploy_role_arn }}

      - name: check if AssumeRoleWithWebIdentity is working
        run: nix develop -c aws -- sts get-caller-identity

      - name: terraform validate terraform-state
        run: nix develop -c terraform validate
        working-directory: deploy/terraform-state

      - name: terraform fmt terraform-state
        run: nix develop -c terraform fmt -check
        working-directory: deploy/terraform-state

      - name: terraform plan terraform-state
        run: nix develop -c terraform plan -out=out.plan
        working-directory: deploy/terraform-state

      # TODO: Migrate state?

      - name: terraform init
        run: nix develop -c ./init.sh
        working-directory: deploy

      - name: terraform validate
        run: nix develop -c terraform validate
        working-directory: deploy

      - name: terraform fmt
        run: nix develop -c terraform fmt -check
        working-directory: deploy

      - name: terraform plan
        run:  nix develop -c terraform plan -out=plan.out
        working-directory: deploy

      - name: terraform apply
        run: nix develop -c terraform apply plan.out
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: deploy